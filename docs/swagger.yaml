basePath: /
definitions:
  entity.User:
    properties:
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
    type: object
  handler.SingleResp:
    properties:
      data: {}
      error:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  handler.UserRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample ECHO golang API.
  termsOfService: http://swagger.io/terms/
  title: Swagger ECHO Go API
  version: "1.0"
paths:
  /bye:
    get:
      consumes:
      - application/json
      description: says bye to the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Say Bye
      tags:
      - say
  /damn:
    get:
      consumes:
      - application/json
      description: says damn to the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Say Damn
      tags:
      - say
  /hello:
    get:
      consumes:
      - application/json
      description: says hello to the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Say Hello
      tags:
      - say
  /user:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user entity
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Create user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: string valid
        in: query
        maxLength: 100
        minLength: 1
        name: firstName
        required: true
        type: string
      - description: string valid
        in: query
        maxLength: 100
        minLength: 1
        name: lastName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Update user
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: get user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SingleResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.SingleResp'
      summary: Get user
      tags:
      - user
swagger: "2.0"
